{
  "permissions": {
    "allow": [
      "Bash(python:*)",
      "Bash(if [ -f .env ])",
      "Bash(then echo \"=== .env exists ===\")",
      "Bash(cat:*)",
      "Bash(else echo \"=== .env does not exist ===\")",
      "Bash(fi)",
      "Bash(set FLASK_APP=run.py:*)",
      "Bash(set FLASK_ENV=development)",
      "Bash(curl:*)",
      "Bash(flask db migrate:*)",
      "Bash(flask db:*)",
      "Bash(sqlite3:*)",
      "Bash(flask routes:*)",
      "Bash(if [ -f .gitignore ])",
      "Bash(then cat .gitignore)",
      "Bash(else echo \"No .gitignore file found\")",
      "Bash(if [ -f requirements.txt ])",
      "Bash(then echo \"requirements.txt exists\")",
      "Bash(else echo \"No requirements.txt found\")",
      "Bash(git add .)",
      "Bash(git commit -m \"$(cat <<''EOF''\nMajor update: Complete admin portal with role-based permissions\n\n- Combined admin portal and KB applications into single unified app\n- Implemented 3-tier role system (Admin, Manager, Staff)\n- Updated styling to clean, readable light theme\n- Added comprehensive role-based access control\n- Updated navigation permissions based on user roles\n- Fixed user profile routing issues\n- Added manager role to user management forms\n- Created documentation (README, ROLE_PERMISSIONS)\n- Added sample data population script\n- Improved form styling and readability\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git push origin main)",
      "Bash(git add PYTHONANYWHERE_DEPLOYMENT.md)",
      "Bash(git commit -m \"Add PythonAnywhere deployment guide\")",
      "Bash(git add UPDATE_EXISTING_DEPLOYMENT.md)",
      "Bash(git commit -m \"Add guide for updating existing PythonAnywhere deployment\")",
      "Bash(git add MIGRATE_WITHOUT_KB.md)",
      "Bash(git commit -m \"Add migration guide for app without existing KB tables\")",
      "Bash(then echo \".env file created successfully\")",
      "Bash(else echo \".env file NOT created\")",
      "Bash(tasklist)",
      "Bash(findstr python.exe)",
      "Bash(taskkill /F /PID 21764 /PID 19316)",
      "Bash(taskkill //F //PID 21764 //PID 19316)",
      "Bash(timeout 3)",
      "Bash(timeout:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(dir:*)",
      "Bash(git check-ignore:*)"
    ],
    "deny": [],
    "ask": []
  }
}
